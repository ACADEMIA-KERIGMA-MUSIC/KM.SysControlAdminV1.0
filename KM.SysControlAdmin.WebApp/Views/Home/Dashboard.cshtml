
@{
    ViewData["Title"] = "Dashboard";
}

<div class="container-fluid px-4">
    <br />
    <div class="row">
        <div class="col-xl-2 col-md-4 mb-3">
            <div class="card bg-primary text-white mb-4 text-center">
                <div class="card-body"><strong>Total De Alumnos</strong></div>
                <h4 class="card-body">@ViewData["TotalAlumnos"] Alumnos</h4>
            </div>
        </div>
        <div class="col-xl-2 col-md-4 mb-3">
            <div class="card bg-warning text-white mb-4 text-center">
                <div class="card-body"><strong>Total De Horarios</strong></div>
                <h4 class="card-body">@ViewData["TotalHorarios"] Horarios</h4>
            </div>
        </div>
        <div class="col-xl-2 col-md-4 mb-3">
            <div class="card bg-success text-white mb-4 text-center">
                <div class="card-body"><strong>Total De Instructores</strong></div>
                <h4 class="card-body">@ViewData["TotalInstructores"] Instructores</h4>
            </div>
        </div>
        <div class="col-xl-2 col-md-4 mb-3">
            <div class="card bg-danger text-white mb-4 text-center">
                <div class="card-body"><strong>Total De Cursos</strong></div>
                <h4 class="card-body">@ViewData["TotalCursos"] Cursos</h4>
            </div>
        </div>
        <div class="col-xl-2 col-md-4 mb-3">
            <div class="card bg-warning text-white mb-4 text-center">
                <div class="card-body"><strong>Total De Asignaciones</strong></div>
                <h4 class="card-body">@ViewData["TotalAsignaciones"] Asignaciones</h4>
            </div>
        </div>
        <div class="col-xl-2 col-md-4 mb-3">
            <div class="card bg-warning text-white mb-4 text-center">
                <div class="card-body"><strong>Total De Usuarios</strong></div>
                <h4 class="card-body">@ViewData["TotalUsuarios"] Usuarios</h4>
            </div>
        </div>
    </div>

    <!-- Contenedor principal -->
    <div class="container-fluid mt-4">
        <div class="row justify-content-center">
            <!-- Gráfico Horarios -->
            <div class="col-md-4 d-flex justify-content-center mb-3">
                <div class="card p-3 shadow" style="height: 350px;">
                    <h5 class="text-center">Resumen de Horarios</h5>
                    <div class="d-flex justify-content-center align-items-center" style="height: 100%;">
                        <canvas id="horariosChart" style="width: 100%; height: 100%;"></canvas>
                    </div>
                </div>
            </div>

            <!-- Gráfico Instructores por género -->
            <div class="col-md-4 d-flex justify-content-center mb-3">
                <div class="card p-3 shadow" style="width: 100%; height: 350px;">
                    <h5 class="text-center">Resumen Instructores Por Género</h5>
                    <div class="d-flex justify-content-center align-items-center" style="height: 85%;">
                        <canvas id="instructoresPorGeneroChart" style="width: 150%; max-width: 300px;"></canvas>
                    </div>
                </div>
            </div>

            <!-- Gráfico Instructores por estado -->
            <div class="col-md-4 d-flex justify-content-center mb-3">
                <div class="card p-3 shadow" style="width: 100%; height: 350px;">
                    <h5 class="text-center">Resumen Instructores Segun Su Estado</h5>
                    <div class="d-flex justify-content-center align-items-center" style="height: 85%;">
                        <canvas id="instructoresPorEstadoChart" style="width: 150%; max-width: 300px;"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Contenedor principal 2 -->
    <div class="container-fluid mt-4">
        <div class="row justify-content-center">
            <!-- Gráfico Alumnos Becados y Externos -->
            <div class="col-md-4 d-flex justify-content-center mb-3">
                <div class="card p-3 shadow" style="width: 100%; height: 350px;">
                    <h5 class="text-center">Resumen Alumnos Becados y Externos</h5>
                    <div class="d-flex justify-content-center align-items-center" style="height: 85%;">
                        <canvas id="alumnosBecadosExternosChart" style="width: 150%; max-width: 300px;"></canvas>
                    </div>
                </div>
            </div>
            <!-- Gráfico Alumnos Masculinos y Femeninos -->
            <div class="col-md-4 d-flex justify-content-center mb-3">
                <div class="card p-3 shadow" style="height: 350px;">
                    <h5 class="text-center">Resumen De Alumnos Por Genero</h5>
                    <div class="d-flex justify-content-center align-items-center" style="height: 100%;">
                        <canvas id="alumnosPorGeneroChart" style="width: 100%; height: 100%;"></canvas>
                    </div>
                </div>
            </div>
            <!-- Gráfico Alumnos por estado -->
            <div class="col-md-4 d-flex justify-content-center mb-3">
                <div class="card p-3 shadow" style="width: 100%; height: 350px;">
                    <h5 class="text-center">Resumen Alumnos Por Estado</h5>
                    <div class="d-flex justify-content-center align-items-center" style="height: 85%;">
                        <canvas id="alumnosPorEstadoChart" style="width: 150%; max-width: 300px;"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Contenedor principal 3 -->
    <div class="container-fluid mt-4">
        <div class="row justify-content-center">
            <!-- Gráfico Alumnos Mayor de Edad y Menor de Edad -->
            <div class="col-md-4 d-flex justify-content-center mb-3">
                <div class="card p-3 shadow" style="height: 350px;">
                    <h5 class="text-center">Resumen De Alumnos Por Edad</h5>
                    <div class="d-flex justify-content-center align-items-center" style="height: 100%;">
                        <canvas id="alumnosMayorMenorDeEdadChart" style="width: 100%; height: 100%;"></canvas>
                    </div>
                </div>
            </div>
            <!-- Gráfico Alumnos Categorizados Por Su Edad -->
            <div class="col-md-4 d-flex justify-content-center mb-3">
                <div class="card p-3 shadow" style="height: 350px;">
                    <h5 class="text-center">Resumen De Alumnos Categorizados Por Edad</h5>
                    <div class="d-flex justify-content-center align-items-center" style="height: 100%;">
                        <canvas id="alumnosCategorizadosPorEdadChart" style="width: 100%; height: 100%;"></canvas>
                    </div>
                </div>
            </div>
            <!-- Gráfico Cursos por estado -->
            <div class="col-md-4 d-flex justify-content-center mb-3">
                <div class="card p-3 shadow" style="width: 100%; height: 350px;">
                    <h5 class="text-center">Resumen Cursos Segun Su Estado</h5>
                    <div class="d-flex justify-content-center align-items-center" style="height: 85%;">
                        <canvas id="cursosPorEstadoChart" style="width: 150%; max-width: 300px;"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Contenedor principal 4 -->
    <div class="container-fluid mt-4">
        <div class="row justify-content-center">
            <!-- Gráfico 3 cursos con mas asignaciones -->
            <div class="col-md-4 d-flex justify-content-center mb-3">
                <div class="card p-3 shadow" style="width: 100%; height: 350px;">
                    <h5 class="text-center">Resumen Cursos Con Más Asignaciones</h5>
                    <div class="d-flex justify-content-center align-items-center" style="height: 85%;">
                        <canvas id="cursosConMasAsignacionesChart" style="width: 150%; max-width: 300px;"></canvas>
                    </div>
                </div>
            </div>
            <!-- Gráfico Usuarios por estado -->
            <div class="col-md-4 d-flex justify-content-center mb-3">
                <div class="card p-3 shadow" style="width: 100%; height: 350px;">
                    <h5 class="text-center">Resumen Usuarios Segun Su Estado</h5>
                    <div class="d-flex justify-content-center align-items-center" style="height: 85%;">
                        <canvas id="usuariosPorEstadoChart" style="width: 150%; max-width: 300px;"></canvas>
                    </div>
                </div>
            </div>
            <!-- Gráfico usuarios totales segun su rol -->
            <div class="col-md-4 d-flex justify-content-center mb-3">
                <div class="card p-3 shadow" style="width: 100%; height: 350px;">
                    <h5 class="text-center">Resumen Usuarios Totales Segun Su Rol</h5>
                    <div class="d-flex justify-content-center align-items-center" style="height: 85%;">
                        <canvas id="usuariosTotalesSegunRolChart" style="width: 150%; max-width: 300px;"></canvas>
                    </div>
                </div>
            </div>
        </div>        
    </div>

</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {

        // Gráfico Resumen De Horarios
        var ctx = document.getElementById("horariosChart").getContext("2d");

        // Datos traídos desde ViewData
        var totalHorarios = @ViewData["TotalHorarios"];
        var totalHorariosActivos = @ViewData["TotalHorariosActivos"];
        var totalHorariosInactivos = @ViewData["TotalHorariosInactivos"];

        var horariosChart = new Chart(ctx, {
            type: 'bar', // Tipo de gráfico
            data: {
                labels: ["Total Horarios", "Activos", "Inactivos"], // Etiquetas
                datasets: [{
                    label: 'Cantidad de Horarios',
                    data: [totalHorarios, totalHorariosActivos, totalHorariosInactivos], // Valores
                    backgroundColor: [
                        'rgba(54, 162, 235, 0.6)', // Azul para total
                        'rgba(75, 192, 192, 0.6)', // Verde para activos
                        'rgba(255, 99, 132, 0.6)' // Rojo para inactivos
                    ],
                    borderColor: [
                        'rgba(54, 162, 235, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(255, 99, 132, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            stepSize: 1 // Para evitar valores decimales si los datos son enteros
                        }
                    }
                }
            }
        });

        // Gráfico Instructores por Género
        var ctxGenero = document.getElementById("instructoresPorGeneroChart").getContext("2d");

        // Datos traídos desde ViewData para los instructores por género
        var totalInstructoresMasculinos = @ViewData["TotalInstructoresMasculinos"];
        var totalInstructoresFemeninos = @ViewData["TotalInstructoresFemeninos"];

        var instructoresPorGeneroChart = new Chart(ctxGenero, {
            type: 'pie', // Tipo de gráfico (pastel)
            data: {
                labels: ["Masculinos", "Femeninos"], // Etiquetas
                datasets: [{
                    label: 'Cantidad de Instructores por Género',
                    data: [totalInstructoresMasculinos, totalInstructoresFemeninos], // Valores
                    backgroundColor: [
                        'rgba(54, 162, 235, 0.6)', // Azul para masculinos
                        'rgba(255, 99, 132, 0.6)' // Rojo para femeninos
                    ],
                    borderColor: [
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 99, 132, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top', // Posición de la leyenda
                    },
                    tooltip: {
                        callbacks: {
                            label: function (tooltipItem) {
                                return tooltipItem.label + ': ' + tooltipItem.raw + ' instructores'; // Formato del tooltip
                            }
                        }
                    }
                }
            }
        });

        // Gráfico Instructores por Estado
        var ctxEstado = document.getElementById("instructoresPorEstadoChart").getContext("2d");

        // Datos traídos desde ViewData para los instructores activos e inactivos
        var totalInstructoresActivos = @ViewData["TotalInstructoresActivos"];
        var totalInstructoresInactivos = @ViewData["TotalInstructoresInactivos"];

        var instructoresPorEstadoChart = new Chart(ctxEstado, {
            type: 'pie', // Tipo de gráfico (pastel)
            data: {
                labels: ["Activos", "Inactivos"], // Etiquetas
                datasets: [{
                    label: 'Cantidad de Instructores por Estado',
                    data: [totalInstructoresActivos, totalInstructoresInactivos], // Valores
                    backgroundColor: [
                        'rgba(75, 192, 192, 0.6)', // Verde para activos
                        'rgba(255, 99, 132, 0.6)' // Rojo para inactivos
                    ],
                    borderColor: [
                        'rgba(75, 192, 192, 1)',
                        'rgba(255, 99, 132, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top', // Posición de la leyenda
                    },
                    tooltip: {
                        callbacks: {
                            label: function (tooltipItem) {
                                return tooltipItem.label + ': ' + tooltipItem.raw + ' instructores'; // Formato del tooltip
                            }
                        }
                    }
                }
            }
        });

        // Gráfico Alumnos Becados y Externos   
        var totalAlumnosExternos = @ViewData["TotalAlumnosExternos"];
        var totalAlumnosBecados = @ViewData["TotalAlumnosBecados"];

        // Obtener el contexto del canvas
        var ctx = document.getElementById("alumnosBecadosExternosChart").getContext("2d");

        // Crear el gráfico de tipo Doughnut (con hueco al centro)
        var alumnosBecadosExternosChart = new Chart(ctx, {
            type: 'doughnut', // Tipo de gráfico: Doughnut (con hueco)
            data: {
                labels: ["Alumnos Externos", "Alumnos Becados"], // Etiquetas
                datasets: [{
                    data: [totalAlumnosExternos, totalAlumnosBecados], // Datos de los alumnos
                    backgroundColor: [
                        'rgba(54, 162, 235, 0.6)', // Color para alumnos externos
                        'rgba(75, 192, 192, 0.6)'  // Color para alumnos becados
                    ],
                    borderColor: [
                        'rgba(54, 162, 235, 1)',
                        'rgba(75, 192, 192, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top' // Posición de la leyenda
                    },
                    tooltip: {
                        callbacks: {
                            label: function (tooltipItem) {
                                // Personalizar el tooltip
                                return tooltipItem.label + ': ' + tooltipItem.raw + ' Alumnos';
                            }
                        }
                    },
                    // Personalización para el hueco en el centro
                    doughnut: {
                        cutoutPercentage: 50, // Controla el tamaño del hueco en el centro (50% es el hueco a la mitad)
                    }
                }
            }
        });

        // Grafico Alumnos Por Genero Masculino y Femenino
        var totalMasculinos = @ViewData["TotalAlumnosMasculinos"];
        var totalFemeninos = @ViewData["TotalAlumnosFemeninos"];

        // Obtener el contexto del canvas
        var ctx = document.getElementById("alumnosPorGeneroChart").getContext("2d");

        // Crear el gráfico de barras
        var alumnosPorGeneroChart = new Chart(ctx, {
            type: 'bar', // Tipo de gráfico: Barra
            data: {
                labels: ["Masculino", "Femenino"], // Etiquetas
                datasets: [{
                    label: "Cantidad de Alumnos",
                    data: [totalMasculinos, totalFemeninos], // Valores desde ViewData
                    backgroundColor: [
                        'rgba(54, 162, 235, 0.7)', // Azul para Masculinos
                        'rgba(255, 99, 132, 0.7)' // Rojo para Femeninos
                    ],
                    borderColor: [
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 99, 132, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            stepSize: 1 // Para evitar valores decimales si los datos son enteros
                        }   
                    }
                }
            }
        });

        // Grafico Alumnos Por Estado Activo e Inactivo
        var ctx = document.getElementById("alumnosPorEstadoChart").getContext("2d");

        // Obtener los valores desde ViewBag
        var totalAlumnosActivos = @ViewData["TotalAlumnosActivos"];
        var totalAlumnosInactivos = @ViewData["TotalAlumnosInactivos"];

        var alumnosPorEstadoChart = new Chart(ctx, {
            type: 'doughnut', // Gráfico de pastel en forma de dona
            data: {
                labels: ["Activos", "Inactivos"], // Etiquetas del gráfico
                datasets: [{
                    data: [totalAlumnosActivos, totalAlumnosInactivos], // Valores
                    backgroundColor: [
                        'rgba(54, 162, 235, 0.7)', // Azul para Activos
                        'rgba(255, 99, 132, 0.7)'  // Rojo para Inactivos
                    ],
                    borderColor: [
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 99, 132, 1)'
                    ],
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'top'
                    }
                }
            }
        });

        // Grafico Alumnos Por Edad: Mayor de Edad o Menor de Edad
        var ctx = document.getElementById("alumnosMayorMenorDeEdadChart").getContext("2d");

        // Obtener los valores desde ViewData
        var totalMenoresEdad = @ViewData["TotalMenoresEdad"];
        var totalMayoresEdad = @ViewData["TotalMayoresEdad"];

        var alumnosMayorMenorDeEdadChart = new Chart(ctx, {
            type: 'bar', // Tipo de gráfico: Barras
            data: {
                labels: ["Menores de Edad", "Mayores de Edad"], // Etiquetas de las barras
                datasets: [{
                    label: 'Cantidad de Alumnos',
                    data: [totalMenoresEdad, totalMayoresEdad], // Datos desde ViewData
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.6)',  // Rojo para menores de edad
                        'rgba(54, 162, 235, 0.6)'   // Azul para mayores de edad
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            stepSize: 1 // Asegura que los valores sean enteros
                        }
                    }
                }
            }
        });

        // Grafico alumnos categorizados por edad 
        var ctx = document.getElementById("alumnosCategorizadosPorEdadChart").getContext("2d");

        var totalNinos = parseInt('@ViewData["TotalNinos"]') || 0;
        var totalAdolescentes = parseInt('@ViewData["TotalAdolescentes"]') || 0;
        var totalJovenes = parseInt('@ViewData["TotalJovenes"]') || 0;
        var totalAdultos = parseInt('@ViewData["TotalAdultos"]') || 0;

        var alumnosCategorizadosPorEdadChart = new Chart(ctx, {
            type: "bar",
            data: {
                labels: ["Niños (5-12 años)", "Adolescentes (13-17 años)", "Jóvenes (18-25 años)", "Adultos (26+ años)"],
                datasets: [{
                    label: "Cantidad de Alumnos",
                    data: [totalNinos, totalAdolescentes, totalJovenes, totalAdultos],
                    backgroundColor: [
                        "rgba(54, 162, 235, 0.6)",  // Azul para Niños
                        "rgba(255, 206, 86, 0.6)",  // Amarillo para Adolescentes
                        "rgba(75, 192, 192, 0.6)",  // Verde para Jóvenes
                        "rgba(255, 99, 132, 0.6)"   // Rojo para Adultos
                    ],
                    borderColor: [
                        "rgba(54, 162, 235, 1)",
                        "rgba(255, 206, 86, 1)",
                        "rgba(75, 192, 192, 1)",
                        "rgba(255, 99, 132, 1)"
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            stepSize: 1 // Asegura que los valores sean enteros
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: false // Oculta la leyenda
                    }
                }
            }
        });

        // Grafico cursos segun su estado
        var ctx = document.getElementById("cursosPorEstadoChart").getContext("2d");

        var totalCursosActivos = parseInt('@ViewData["TotalCursosActivos"]') || 0;
        var totalCursosInactivos = parseInt('@ViewData["TotalCursosInactivos"]') || 0;

        var cursosPorEstadoChart = new Chart(ctx, {
            type: "pie", // Cambiado a gráfico de pie
            data: {
                labels: ["Activos", "Inactivos"],
                datasets: [{
                    data: [totalCursosActivos, totalCursosInactivos],
                    backgroundColor: [
                        "rgba(75, 192, 192, 0.6)", // Verde para activos
                        "rgba(255, 99, 132, 0.6)"  // Rojo para inactivos
                    ],
                    borderColor: [
                        "rgba(75, 192, 192, 1)",
                        "rgba(255, 99, 132, 1)"
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: "top"
                    }
                }
            }
        });

        // Grafico los 3 cursos con mas asignaciones
        var ctx = document.getElementById("cursosConMasAsignacionesChart").getContext("2d");

        // Obtener los valores desde ViewData
        var topCourses = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewData["TopCourses"]));
        var assignments = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewData["Assignments"]));

        var cursosConMasAsignacionesChart = new Chart(ctx, {
            type: 'doughnut', // Gráfico de dona
            data: {
                labels: topCourses, // Etiquetas de los cursos
                datasets: [{
                    label: 'Asignaciones', // Título del gráfico
                    data: assignments, // Valores de asignaciones
                    backgroundColor: [
                        'rgba(54, 162, 235, 0.7)', // Color para el primer curso
                        'rgba(255, 99, 132, 0.7)', // Color para el segundo curso
                        'rgba(75, 192, 192, 0.7)'  // Color para el tercer curso
                    ],
                    borderColor: [
                        'rgba(54, 162, 235, 1)', // Borde para el primer curso
                        'rgba(255, 99, 132, 1)', // Borde para el segundo curso
                        'rgba(75, 192, 192, 1)'  // Borde para el tercer curso
                    ],
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'top' // Posición de la leyenda
                    },
                    tooltip: {
                        callbacks: {
                            label: function (tooltipItem) {
                                return tooltipItem.label + ': ' + tooltipItem.raw + ' asignaciones';
                            }
                        }
                    }
                }
            }
        });

        // Grafico usuarios por su estado: activo o inactivo
        var ctx = document.getElementById("usuariosPorEstadoChart").getContext("2d");

        // Obtener datos desde ViewData
        var totalUsuariosActivos = @ViewData["TotalUsuariosActivos"];
        var totalUsuariosInactivos = @ViewData["TotalUsuariosInactivos"];

        // Crear el gráfico de tipo Pie
        var cursosPorEstadoChart = new Chart(ctx, {
            type: 'pie', // Tipo de gráfico: Pie
            data: {
                labels: ["Usuarios Activos", "Usuarios Inactivos"], // Etiquetas
                datasets: [{
                    data: [totalUsuariosActivos, totalUsuariosInactivos], // Datos
                    backgroundColor: [
                        'rgba(54, 162, 235, 0.6)', // Azul para activos
                        'rgba(255, 99, 132, 0.6)'  // Rojo para inactivos
                    ],
                    borderColor: [
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 99, 132, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top' // Posición de la leyenda
                    },
                    tooltip: {
                        callbacks: {
                            label: function (tooltipItem) {
                                // Personalizar el tooltip
                                var value = tooltipItem.raw;
                                return tooltipItem.label + ': ' + value + ' Usuarios';
                            }
                        }
                    }
                }
            }
        });

        // Obtener datos desde ViewData
        var totalAdministradores = @ViewData["TotalAdministradores"];
        var totalSecretarios = @ViewData["TotalSecretarios"];
        var totalAlumnos = @ViewData["TotalAlumnos"];
        var totalInvitados = @ViewData["TotalInvitados"];
        var totalInstructores = @ViewData["TotalInstructores"];

        // Obtener el contexto del canvas
        var ctx = document.getElementById("usuariosTotalesSegunRolChart").getContext("2d");

        // Crear el gráfico Doughnut
        var usuariosTotalesSegunRolChart = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ["Administradores", "Secretarios", "Alumnos", "Invitados", "Instructores"],
                datasets: [{
                    data: [totalAdministradores, totalSecretarios, totalAlumnos, totalInvitados, totalInstructores],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.6)',  // Rojo - Administradores
                        'rgba(54, 162, 235, 0.6)',  // Azul - Secretarios
                        'rgba(255, 206, 86, 0.6)',  // Amarillo - Alumnos
                        'rgba(75, 192, 192, 0.6)',  // Verde - Invitados
                        'rgba(153, 102, 255, 0.6)'  // Morado - Instructores
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top'
                    },
                    tooltip: {
                        callbacks: {
                            label: function (tooltipItem) {
                                return tooltipItem.label + ': ' + tooltipItem.raw + ' Usuarios';
                            }
                        }
                    }
                },
                cutout: '50%' // Tamaño del agujero en el centro (Doughnut)
            }
        });

    });
</script>