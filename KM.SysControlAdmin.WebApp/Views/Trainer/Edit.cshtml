@model KM.SysControlAdmin.EN.Trainer___EN.Trainer

@{
    ViewData["Title"] = "Modificar Instructor";
}

<link href="/css/Trainer/DesignCreateAndEdit.css" rel="stylesheet" />

<br />
<h1>Formulario - Modificar Instructor</h1>
<span>@ViewBag.Error</span>
<hr />
<br />
<div class="row">
    <div class="col-md-12">
        <form id="Form" asp-action="Edit" onsubmit="CreateRecord(event)" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <h2>Informacion Personal</h2>
            <div class="form-group-row">
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" required placeholder="Ingresar" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="LastName" class="control-label"></label>
                    <input asp-for="LastName" class="form-control" required placeholder="Ingresar" />
                    <span asp-validation-for="LastName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Dui" class="control-label"></label>
                    <input asp-for="Dui" class="form-control" id="inputDui" required placeholder="00000000-0" />
                    <span asp-validation-for="Dui" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group-row">
                <div class="form-group">
                    <label asp-for="DateOfBirth" class="control-label"></label>
                    <input asp-for="DateOfBirth" class="form-control" required />
                    <span asp-validation-for="DateOfBirth" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Age" class="control-label"></label>
                    <input asp-for="Age" class="form-control" readonly required placeholder="*Se auto-calcula*" />
                    <span asp-validation-for="Age" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Gender" class="control-label"></label>
                    <select name="Gender" class="form-select" required id="cbxGender">
                        <option>Seleccionar</option>
                        <option value="Masculino">Masculino</option>
                        <option value="Femenino">Femenino</option>
                    </select>
                    <span asp-validation-for="Gender" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="CivilStatus" class="control-label"></label>
                    <select name="CivilStatus" class="form-select" required id="cbxCivilStatus">
                        <option>Seleccionar</option>
                        <option value="Soltero/a">Soltero/a</option>
                        <option value="Casado/a">Casado/a</option>
                        <option value="Divorciado/a">Divorciado/a</option>
                        <option value="Viudo/a">Viudo/a</option>
                    </select>
                    <span asp-validation-for="CivilStatus" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group-row">
                <div class="form-group">
                    <label asp-for="EntryDate" class="control-label"></label>
                    <input asp-for="EntryDate" class="form-control" required />
                    <span asp-validation-for="EntryDate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Phone" class="control-label"></label>
                    <input asp-for="Phone" class="form-control" id="inputPhone" required placeholder="0000-0000" />
                    <span asp-validation-for="Phone" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="PersonalEmail" class="control-label"></label>
                    <input asp-for="PersonalEmail" class="form-control" placeholder="ejemplo@gmail.com" />
                    <span asp-validation-for="PersonalEmail" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Status" class="control-label"></label>
                    <select name="Status" class="form-select" required id="cbxStatus">
                        <option>Seleccionar</option>
                        <option value="1">Activo</option>
                        <option value="2">Inactivo</option>
                    </select>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Code" class="control-label"></label>
                    <input asp-for="Code" class="form-control" required placeholder="*Se auto-genera*" disabled id="Code" />
                    <span asp-validation-for="Code" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label for="imagen">Fotografia:</label>
                    <input type="file" id="imagen" class="form-control" name="imagen" onchange="mostrarImagen()" asp-for="ImageData" />
                </div>
            </div>
            <div class="form-group-row">
                <div class="form-group">
                    <label asp-for="Address" class="control-label"></label>
                    <input asp-for="Address" class="form-control" required placeholder="Residencial - Colonia, Canton - Caserio, Pol. Pasaje - Casa #0" />
                    <span asp-validation-for="Address" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="CommentsOrObservations" class="control-label"></label>
                    <input asp-for="CommentsOrObservations" class="form-control" placeholder="Opcional" />
                    <span asp-validation-for="CommentsOrObservations" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group-row">
                <div class="form-group">
                    <label asp-for="DateCreated" class="control-label"></label>
                    <input type="date" asp-for="DateCreated" class="form-control" readonly />
                    <span asp-validation-for="DateCreated" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="DateModification" class="control-label"></label>
                    <input type="date" asp-for="DateModification" class="form-control" readonly />
                    <span asp-validation-for="DateModification" class="text-danger"></span>
                </div>
            </div>
            <br />
            <div>
                <p><strong>Vista Previa de Fotografia:</strong></p>
                <img id="imagenPreview" src="@(ViewBag.ImageUrl != null ? "data:image/jpeg;base64," + ViewBag.ImageUrl : "")" alt="Vista previa de la imagen" style="max-width: 100%; max-height: 200px;" />
            </div>
            <br />
            <div class="form-group">
                <a class="btn btn-outline-secondary" asp-action="Index">Regresar a La Lista</a> |
                <input type="submit" value="Modificar Instructor" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<br />

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            // Inicializa los selectores con los valores del modelo
            $("#cbxGender").val('@Model.Gender');
            $("#cbxCivilStatus").val('@Model.CivilStatus');
            $("#cbxStatus").val('@Model.Status');

            // Mostrar alerta de error si ViewBag.Error tiene algún mensaje
            @if (!string.IsNullOrEmpty(ViewBag.Error))
            {
                @:showErrorAlert('@ViewBag.Error');
            }

            // Asignar eventos a los elementos del formulario
            document.getElementById('inputDui').addEventListener('input', function (event) {
                var inputValue = event.target.value;
                var formattedValue = formatDui(inputValue);
                event.target.value = formattedValue;
                generateCode(); // Actualizar el código al modificar el DUI
            });

            const birthDateInput = document.querySelector('input[name="DateOfBirth"]');
            birthDateInput.addEventListener('change', calculateAge);

            const inputPhone = document.getElementById('inputPhone');
            inputPhone.addEventListener('input', function (e) {
                formatPhoneNumber(e.target);
            });

            const firstNameInput = document.querySelector('input[name="Name"]');
            const lastNameInput = document.querySelector('input[name="LastName"]');
    
            firstNameInput.addEventListener('input', generateCode);
            lastNameInput.addEventListener('input', generateCode);
    
            // Validación en tiempo real del correo electrónico
            const emailInput = document.querySelector('input[name="Email"]');
            emailInput.addEventListener('input', validateEmail);

            calculateAge();
            generateCode();
        });

        // Función para validar correo electrónico en tiempo real
        function validateEmail() {
            const emailInput = document.querySelector('input[name="Email"]');
            const emailValue = emailInput.value.trim();
            const emailPattern = /^[^@@\s]+@@[^@@\s]+\.[^@@\s]+$/;

            if (!emailPattern.test(emailValue)) {
                emailInput.classList.add("is-invalid");
                Swal.fire({
                    title: 'Correo Inválido',
                    text: 'Por favor, ingrese un correo válido.',
                    icon: 'warning'
                });
            } else {
                emailInput.classList.remove("is-invalid");
            }
        }

        // Función para confirmar la modificación del registro
        function CreateRecord(e) {
            e.preventDefault();  // Evita el envío del formulario hasta que se valide

            const form = document.getElementById('Form');
            const nameFields = ['Name', 'LastName'];
            const regex = /^[A-ZÑa-zñáéíóúÁÉÍÓÚ. ]+$/;
            let isValid = true;

            nameFields.forEach((field) => {
                const input = document.querySelector(`input[name="${field}"]`);
                if (!regex.test(input.value)) {
                    isValid = false;
                }
            });

            // Validación final del correo antes de enviar
            const emailInput = document.querySelector('input[name="PersonalEmail"]');
            if (emailInput.classList.contains("is-invalid")) {
                Swal.fire({
                    title: 'Error en el formulario',
                    text: 'Corrija los errores antes de enviar.',
                    icon: 'error'
                });
                return;  // No envia el formulario si el correo es inválido
            }

            if (!isValid) {
                Swal.fire({
                    title: '!Advertencia!',
                    text: 'Ciertos Campos Solo Deben Tener Letras, Revisa Tu Ficha',
                    icon: 'warning',
                    confirmButtonText: 'Aceptar'
                });
                return;  // No envia el formulario si los nombres tienen caracteres inválidos
            }

            // Si todas las validaciones son correctas, procede a enviar el formulario
            Swal.fire({
                title: '¿Modificar Registro Existente?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Sí, Modificar Registro',
                cancelButtonText: 'Cancelar',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    form.submit();  // Enviar el formulario solo si el usuario confirma
                }
            });
        }
    </script>
}